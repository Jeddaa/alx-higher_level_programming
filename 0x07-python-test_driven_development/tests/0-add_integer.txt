# run test with ``python3 -m doctest -v ./tests/0-add_integer.txt``

Importing the function from module:
>>> add_integer = __import__('0-add_integer').add_integer

Testing single int and float parameters:
>>> add_integer(4)
102
>>> add_integer(4.9)
102

Testing 2 int and float parameters:
>>> add_integer(2, 9)
11
>>> add_integer(-10, 20)
10
>>> add_integer(2.9, 10)
12
>>> add_integer(1.5, 3.6)
4

Testing super long int
>>> add_integer(999999999999999999999999999999, 1)
1000000000000000000000000000000

Testing for passed inf:
>>> add_integer(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

Testing list with integer:
>>> add_integer([1, 2, 3], 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

Testing string:
>>> add_integer("hello")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("")
Traceback (most recent call last):
...
TypeError: a must be an integer

Testing empty set:
>>> add_integer(set())
Traceback (most recent call last):
...
TypeError: a must be an integer

Testing integer with bool:
>>> add_integer(1, True)
Traceback(most recent call last):
...
TypeError: b must be an integer 

Testing more than 2 args:
>>> add_integer(1, 2, 3)
Traceback(most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given  
